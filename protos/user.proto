syntax = "proto3";
package user.v1;

option go_package = "github.com/HoangTheQuyen96/user-service/v1;user";

import "google/protobuf/timestamp.proto";
import "google/api/field_behavior.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service UserService {
    rpc Register(CreateUserRequest) returns (User){
        option (google.api.http) = {
            post: "/v1/users:register",
            body: "*"
        };
    } 
    
    rpc Login(LoginRequest) returns (LoginResponse){
        option (google.api.http) = {
            post: "/v1/users:login"
            body: "*"
        };
    } 

    rpc Logout(google.protobuf.Empty) returns (google.protobuf.Empty){
        option (google.api.http) = {
            post: "/v1/users:logout"
        };
    }

    rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse){
        option (google.api.http) = {
            post: "/v1/users:refresh-token",
            body: "*"
        };
    }
}

message CreateUserRequest {
    string name = 1 [(google.api.field_behavior) = OPTIONAL];
    string phone = 2 [(google.api.field_behavior) = REQUIRED];
    string email = 3 [(google.api.field_behavior) = REQUIRED];
    string password = 4 [(google.api.field_behavior) = REQUIRED];
} 

message User {
    string id = 1;
    string name = 2;
    string email = 3;
    string phone = 4;
    string password = 5;
    google.protobuf.Timestamp create_time = 6;
    google.protobuf.Timestamp update_time = 7;
}


message LoginRequest {
    string username = 1;
    string password = 2;
}

message LoginResponse {
    /*
        REQUIRED.  The access token issued by the authorization server.
    */
    string access_token = 1;
    /*
        REQUIRED.  The type of the token issued as described in
        Section 7.1.  Value is case insensitive.
    */
    string token_type = 2;
    /*
        RECOMMENDED.  The lifetime in seconds of the access token.  For
        example, the value "3600" denotes that the access token will
        expire in one hour from the time the response was generated.
        If omitted, the authorization server SHOULD provide the
        expiration time via other means or document the default value.
    */
    int32 expires_in = 3;
    /*
        If the authorization server issued a refresh token to the client, the
        client makes a refresh request to the token endpoint by adding the
        following parameters using the "application/x-www-form-urlencoded"
        format per Appendix B with a character encoding of UTF-8 in the HTTP
        request entity-body:

        grant_type
                REQUIRED.  Value MUST be set to "refresh_token".

        refresh_token
                REQUIRED.  The refresh token issued to the client.

        scope
                OPTIONAL.  The scope of the access request as described by
                Section 3.3.  The requested scope MUST NOT include any scope
                not originally granted by the resource owner, and if omitted is
                treated as equal to the scope originally granted by the
                resource owner.

        Because refresh tokens are typically long-lasting credentials used to
        request additional access tokens, the refresh token is bound to the
        client to which it was issued.  If the client type is confidential or
        the client was issued client credentials (or assigned other
        authentication requirements), the client MUST authenticate with the
        authorization server as described in Section 3.2.1.

        For example, the client makes the following HTTP request using
        transport-layer security (with extra line breaks for display purposes
        only):

            POST /token HTTP/1.1
            Host: server.example.com
            Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW
            Content-Type: application/x-www-form-urlencoded

            grant_type=refresh_token&refresh_token=tGzv3JOkF0XG5Qx2TlKWIA
    */
    string refresh_token = 4;
}

message RefreshTokenRequest {
    string refresh_token = 1;
}

message RefreshTokenResponse {
    /*
        REQUIRED.  The access token issued by the authorization server.
    */
    string access_token = 1;
    /*
        REQUIRED.  The type of the token issued as described in
        Section 7.1.  Value is case insensitive.
    */
    string token_type = 2;
    /*
        RECOMMENDED.  The lifetime in seconds of the access token.  For
        example, the value "3600" denotes that the access token will
        expire in one hour from the time the response was generated.
        If omitted, the authorization server SHOULD provide the
        expiration time via other means or document the default value.
    */
    int32 expires_in = 3;
    /*
        If the authorization server issued a refresh token to the client, the
        client makes a refresh request to the token endpoint by adding the
        following parameters using the "application/x-www-form-urlencoded"
        format per Appendix B with a character encoding of UTF-8 in the HTTP
        request entity-body:

        grant_type
                REQUIRED.  Value MUST be set to "refresh_token".

        refresh_token
                REQUIRED.  The refresh token issued to the client.

        scope
                OPTIONAL.  The scope of the access request as described by
                Section 3.3.  The requested scope MUST NOT include any scope
                not originally granted by the resource owner, and if omitted is
                treated as equal to the scope originally granted by the
                resource owner.

        Because refresh tokens are typically long-lasting credentials used to
        request additional access tokens, the refresh token is bound to the
        client to which it was issued.  If the client type is confidential or
        the client was issued client credentials (or assigned other
        authentication requirements), the client MUST authenticate with the
        authorization server as described in Section 3.2.1.

        For example, the client makes the following HTTP request using
        transport-layer security (with extra line breaks for display purposes
        only):

            POST /token HTTP/1.1
            Host: server.example.com
            Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW
            Content-Type: application/x-www-form-urlencoded

            grant_type=refresh_token&refresh_token=tGzv3JOkF0XG5Qx2TlKWIA
    */
    string refresh_token = 4;
}